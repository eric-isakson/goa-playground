// Code generated by goa v3.0.3, DO NOT EDIT.
//
// secured_service gRPC server types
//
// Command:
// $ goa gen github.com/eric-isakson/goa-playground/design

package server

import (
	secured_servicepb "github.com/eric-isakson/goa-playground/gen/grpc/secured_service/pb"
	securedservice "github.com/eric-isakson/goa-playground/gen/secured_service"
	goa "goa.design/goa/v3/pkg"
)

// NewSigninPayload builds the payload of the "signin" endpoint of the
// "secured_service" service from the gRPC request type.
func NewSigninPayload(username string, password string) *securedservice.SigninPayload {
	v := &securedservice.SigninPayload{}
	v.Username = username
	v.Password = password
	return v
}

// NewSigninResponse builds the gRPC response type from the result of the
// "signin" endpoint of the "secured_service" service.
func NewSigninResponse(result *securedservice.Creds) *secured_servicepb.SigninResponse {
	message := &secured_servicepb.SigninResponse{
		Jwt: result.JWT,
	}
	return message
}

// NewSecurePayload builds the payload of the "secure" endpoint of the
// "secured_service" service from the gRPC request type.
func NewSecurePayload(message *secured_servicepb.SecureRequest, token string) *securedservice.SecurePayload {
	v := &securedservice.SecurePayload{}
	if message.Test != "" {
		v.Test = &message.Test
	}
	v.Token = token
	return v
}

// NewSecureResponse builds the gRPC response type from the result of the
// "secure" endpoint of the "secured_service" service.
func NewSecureResponse(result string) *secured_servicepb.SecureResponse {
	message := &secured_servicepb.SecureResponse{}
	message.Field = result
	return message
}

// ValidateSecureRequest runs the validations defined on SecureRequest.
func ValidateSecureRequest(message *secured_servicepb.SecureRequest) (err error) {
	if message.Test != "" {
		if !(message.Test == "exposed" || message.Test == "enum" || message.Test == "values") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("message.test", message.Test, []interface{}{"exposed", "enum", "values"}))
		}
	}
	return
}
