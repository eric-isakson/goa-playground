// Code generated by goa v3.0.3, DO NOT EDIT.
//
// secured_service HTTP server types
//
// Command:
// $ goa gen github.com/eric-isakson/goa-playground/design

package server

import (
	securedservice "github.com/eric-isakson/goa-playground/gen/secured_service"
)

// SigninResponseBody is the type of the "secured_service" service "signin"
// endpoint HTTP response body.
type SigninResponseBody struct {
	// JWT token
	JWT string `form:"jwt" json:"jwt" xml:"jwt"`
}

// SigninUnauthorizedResponseBody is the type of the "secured_service" service
// "signin" endpoint HTTP response body for the "unauthorized" error.
type SigninUnauthorizedResponseBody string

// SecureInvalidScopesResponseBody is the type of the "secured_service" service
// "secure" endpoint HTTP response body for the "invalid-scopes" error.
type SecureInvalidScopesResponseBody string

// SecureUnauthorizedResponseBody is the type of the "secured_service" service
// "secure" endpoint HTTP response body for the "unauthorized" error.
type SecureUnauthorizedResponseBody string

// NewSigninResponseBody builds the HTTP response body from the result of the
// "signin" endpoint of the "secured_service" service.
func NewSigninResponseBody(res *securedservice.Creds) *SigninResponseBody {
	body := &SigninResponseBody{
		JWT: res.JWT,
	}
	return body
}

// NewSigninUnauthorizedResponseBody builds the HTTP response body from the
// result of the "signin" endpoint of the "secured_service" service.
func NewSigninUnauthorizedResponseBody(res securedservice.Unauthorized) SigninUnauthorizedResponseBody {
	body := SigninUnauthorizedResponseBody(res)
	return body
}

// NewSecureInvalidScopesResponseBody builds the HTTP response body from the
// result of the "secure" endpoint of the "secured_service" service.
func NewSecureInvalidScopesResponseBody(res securedservice.InvalidScopes) SecureInvalidScopesResponseBody {
	body := SecureInvalidScopesResponseBody(res)
	return body
}

// NewSecureUnauthorizedResponseBody builds the HTTP response body from the
// result of the "secure" endpoint of the "secured_service" service.
func NewSecureUnauthorizedResponseBody(res securedservice.Unauthorized) SecureUnauthorizedResponseBody {
	body := SecureUnauthorizedResponseBody(res)
	return body
}

// NewSigninPayload builds a secured_service service signin endpoint payload.
func NewSigninPayload() *securedservice.SigninPayload {
	return &securedservice.SigninPayload{}
}

// NewSecurePayload builds a secured_service service secure endpoint payload.
func NewSecurePayload(fail *bool, token string) *securedservice.SecurePayload {
	return &securedservice.SecurePayload{
		Fail:  fail,
		Token: token,
	}
}
